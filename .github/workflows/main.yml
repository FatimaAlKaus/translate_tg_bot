name: build
on: [push, pull_request]

env:
  CONTAINER_NAME: "tg_bot"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.18
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go mod download
          go mod verify
          
      - name: Create config file
        run: |
          mkdir config
          touch config/dev.yml
        
      - name: Write keys
        run: |
          echo "tg_api_key: ${{ secrets.TELEGRAM_API_KEY }}" >> config/dev.yml
          echo "rapid_api_key: ${{ secrets.RAPID_API_KEY }}" >> config/dev.yml
        
      - name: Build
        run: |
          make docker-build
          docker tag tg_translate_bot ${{ secrets.DOCKER_HUB_USERNAME }}/telegram_bot:latest
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCES_TOKEN }}
          
      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/telegram_bot:latest
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        envs: CONTAINER_NAME
        script: |
            # Login into Docker Hub
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCES_TOKEN }}
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)
            # Remove existing image
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/telegram_bot
            # Pull new image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/telegram_bot:latest
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --publish 8080:80 \
            --name $(echo $CONTAINER_NAME) \
            ${{ secrets.DOCKER_HUB_USERNAME }}/telegram_bot:latest
    
